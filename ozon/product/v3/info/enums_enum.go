// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package info

import (
	"fmt"
	"strings"
)

const (
	// ListResponseItemErrorLevelERRORLEVELUNSPECIFIED is a ListResponseItemErrorLevel of type ERROR_LEVEL_UNSPECIFIED.
	ListResponseItemErrorLevelERRORLEVELUNSPECIFIED ListResponseItemErrorLevel = iota
	// ListResponseItemErrorLevelERRORLEVELERROR is a ListResponseItemErrorLevel of type ERROR_LEVEL_ERROR.
	ListResponseItemErrorLevelERRORLEVELERROR
	// ListResponseItemErrorLevelERRORLEVELWARNING is a ListResponseItemErrorLevel of type ERROR_LEVEL_WARNING.
	ListResponseItemErrorLevelERRORLEVELWARNING
	// ListResponseItemErrorLevelERRORLEVELINTERNAL is a ListResponseItemErrorLevel of type ERROR_LEVEL_INTERNAL.
	ListResponseItemErrorLevelERRORLEVELINTERNAL
)

var ErrInvalidListResponseItemErrorLevel = fmt.Errorf("not a valid ListResponseItemErrorLevel, try [%s]", strings.Join(_ListResponseItemErrorLevelNames, ", "))

const _ListResponseItemErrorLevelName = "ERROR_LEVEL_UNSPECIFIEDERROR_LEVEL_ERRORERROR_LEVEL_WARNINGERROR_LEVEL_INTERNAL"

var _ListResponseItemErrorLevelNames = []string{
	_ListResponseItemErrorLevelName[0:23],
	_ListResponseItemErrorLevelName[23:40],
	_ListResponseItemErrorLevelName[40:59],
	_ListResponseItemErrorLevelName[59:79],
}

// ListResponseItemErrorLevelNames returns a list of possible string values of ListResponseItemErrorLevel.
func ListResponseItemErrorLevelNames() []string {
	tmp := make([]string, len(_ListResponseItemErrorLevelNames))
	copy(tmp, _ListResponseItemErrorLevelNames)
	return tmp
}

var _ListResponseItemErrorLevelMap = map[ListResponseItemErrorLevel]string{
	ListResponseItemErrorLevelERRORLEVELUNSPECIFIED: _ListResponseItemErrorLevelName[0:23],
	ListResponseItemErrorLevelERRORLEVELERROR:       _ListResponseItemErrorLevelName[23:40],
	ListResponseItemErrorLevelERRORLEVELWARNING:     _ListResponseItemErrorLevelName[40:59],
	ListResponseItemErrorLevelERRORLEVELINTERNAL:    _ListResponseItemErrorLevelName[59:79],
}

// String implements the Stringer interface.
func (x ListResponseItemErrorLevel) String() string {
	if str, ok := _ListResponseItemErrorLevelMap[x]; ok {
		return str
	}
	return fmt.Sprintf("ListResponseItemErrorLevel(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ListResponseItemErrorLevel) IsValid() bool {
	_, ok := _ListResponseItemErrorLevelMap[x]
	return ok
}

var _ListResponseItemErrorLevelValue = map[string]ListResponseItemErrorLevel{
	_ListResponseItemErrorLevelName[0:23]:  ListResponseItemErrorLevelERRORLEVELUNSPECIFIED,
	_ListResponseItemErrorLevelName[23:40]: ListResponseItemErrorLevelERRORLEVELERROR,
	_ListResponseItemErrorLevelName[40:59]: ListResponseItemErrorLevelERRORLEVELWARNING,
	_ListResponseItemErrorLevelName[59:79]: ListResponseItemErrorLevelERRORLEVELINTERNAL,
}

// ParseListResponseItemErrorLevel attempts to convert a string to a ListResponseItemErrorLevel.
func ParseListResponseItemErrorLevel(name string) (ListResponseItemErrorLevel, error) {
	if x, ok := _ListResponseItemErrorLevelValue[name]; ok {
		return x, nil
	}
	return ListResponseItemErrorLevel(0), fmt.Errorf("%s is %w", name, ErrInvalidListResponseItemErrorLevel)
}

// MarshalText implements the text marshaller method.
func (x ListResponseItemErrorLevel) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *ListResponseItemErrorLevel) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseListResponseItemErrorLevel(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// ListResponseItemPriceIndexesColorIndexCOLORINDEXUNSPECIFIED is a ListResponseItemPriceIndexesColorIndex of type COLOR_INDEX_UNSPECIFIED.
	ListResponseItemPriceIndexesColorIndexCOLORINDEXUNSPECIFIED ListResponseItemPriceIndexesColorIndex = iota
	// ListResponseItemPriceIndexesColorIndexCOLORINDEXWITHOUTINDEX is a ListResponseItemPriceIndexesColorIndex of type COLOR_INDEX_WITHOUT_INDEX.
	ListResponseItemPriceIndexesColorIndexCOLORINDEXWITHOUTINDEX
	// ListResponseItemPriceIndexesColorIndexCOLORINDEXGREEN is a ListResponseItemPriceIndexesColorIndex of type COLOR_INDEX_GREEN.
	ListResponseItemPriceIndexesColorIndexCOLORINDEXGREEN
	// ListResponseItemPriceIndexesColorIndexCOLORINDEXYELLOW is a ListResponseItemPriceIndexesColorIndex of type COLOR_INDEX_YELLOW.
	ListResponseItemPriceIndexesColorIndexCOLORINDEXYELLOW
	// ListResponseItemPriceIndexesColorIndexCOLORINDEXRED is a ListResponseItemPriceIndexesColorIndex of type COLOR_INDEX_RED.
	ListResponseItemPriceIndexesColorIndexCOLORINDEXRED
)

var ErrInvalidListResponseItemPriceIndexesColorIndex = fmt.Errorf("not a valid ListResponseItemPriceIndexesColorIndex, try [%s]", strings.Join(_ListResponseItemPriceIndexesColorIndexNames, ", "))

const _ListResponseItemPriceIndexesColorIndexName = "COLOR_INDEX_UNSPECIFIEDCOLOR_INDEX_WITHOUT_INDEXCOLOR_INDEX_GREENCOLOR_INDEX_YELLOWCOLOR_INDEX_RED"

var _ListResponseItemPriceIndexesColorIndexNames = []string{
	_ListResponseItemPriceIndexesColorIndexName[0:23],
	_ListResponseItemPriceIndexesColorIndexName[23:48],
	_ListResponseItemPriceIndexesColorIndexName[48:65],
	_ListResponseItemPriceIndexesColorIndexName[65:83],
	_ListResponseItemPriceIndexesColorIndexName[83:98],
}

// ListResponseItemPriceIndexesColorIndexNames returns a list of possible string values of ListResponseItemPriceIndexesColorIndex.
func ListResponseItemPriceIndexesColorIndexNames() []string {
	tmp := make([]string, len(_ListResponseItemPriceIndexesColorIndexNames))
	copy(tmp, _ListResponseItemPriceIndexesColorIndexNames)
	return tmp
}

var _ListResponseItemPriceIndexesColorIndexMap = map[ListResponseItemPriceIndexesColorIndex]string{
	ListResponseItemPriceIndexesColorIndexCOLORINDEXUNSPECIFIED:  _ListResponseItemPriceIndexesColorIndexName[0:23],
	ListResponseItemPriceIndexesColorIndexCOLORINDEXWITHOUTINDEX: _ListResponseItemPriceIndexesColorIndexName[23:48],
	ListResponseItemPriceIndexesColorIndexCOLORINDEXGREEN:        _ListResponseItemPriceIndexesColorIndexName[48:65],
	ListResponseItemPriceIndexesColorIndexCOLORINDEXYELLOW:       _ListResponseItemPriceIndexesColorIndexName[65:83],
	ListResponseItemPriceIndexesColorIndexCOLORINDEXRED:          _ListResponseItemPriceIndexesColorIndexName[83:98],
}

// String implements the Stringer interface.
func (x ListResponseItemPriceIndexesColorIndex) String() string {
	if str, ok := _ListResponseItemPriceIndexesColorIndexMap[x]; ok {
		return str
	}
	return fmt.Sprintf("ListResponseItemPriceIndexesColorIndex(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ListResponseItemPriceIndexesColorIndex) IsValid() bool {
	_, ok := _ListResponseItemPriceIndexesColorIndexMap[x]
	return ok
}

var _ListResponseItemPriceIndexesColorIndexValue = map[string]ListResponseItemPriceIndexesColorIndex{
	_ListResponseItemPriceIndexesColorIndexName[0:23]:  ListResponseItemPriceIndexesColorIndexCOLORINDEXUNSPECIFIED,
	_ListResponseItemPriceIndexesColorIndexName[23:48]: ListResponseItemPriceIndexesColorIndexCOLORINDEXWITHOUTINDEX,
	_ListResponseItemPriceIndexesColorIndexName[48:65]: ListResponseItemPriceIndexesColorIndexCOLORINDEXGREEN,
	_ListResponseItemPriceIndexesColorIndexName[65:83]: ListResponseItemPriceIndexesColorIndexCOLORINDEXYELLOW,
	_ListResponseItemPriceIndexesColorIndexName[83:98]: ListResponseItemPriceIndexesColorIndexCOLORINDEXRED,
}

// ParseListResponseItemPriceIndexesColorIndex attempts to convert a string to a ListResponseItemPriceIndexesColorIndex.
func ParseListResponseItemPriceIndexesColorIndex(name string) (ListResponseItemPriceIndexesColorIndex, error) {
	if x, ok := _ListResponseItemPriceIndexesColorIndexValue[name]; ok {
		return x, nil
	}
	return ListResponseItemPriceIndexesColorIndex(0), fmt.Errorf("%s is %w", name, ErrInvalidListResponseItemPriceIndexesColorIndex)
}

// MarshalText implements the text marshaller method.
func (x ListResponseItemPriceIndexesColorIndex) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *ListResponseItemPriceIndexesColorIndex) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseListResponseItemPriceIndexesColorIndex(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// ListResponseItemSourceShipmentTypeSHIPMENTTYPEUNSPECIFIED is a ListResponseItemSourceShipmentType of type SHIPMENT_TYPE_UNSPECIFIED.
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEUNSPECIFIED ListResponseItemSourceShipmentType = iota
	// ListResponseItemSourceShipmentTypeSHIPMENTTYPEGENERAL is a ListResponseItemSourceShipmentType of type SHIPMENT_TYPE_GENERAL.
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEGENERAL
	// ListResponseItemSourceShipmentTypeSHIPMENTTYPEBOX is a ListResponseItemSourceShipmentType of type SHIPMENT_TYPE_BOX.
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEBOX
	// ListResponseItemSourceShipmentTypeSHIPMENTTYPEPALLET is a ListResponseItemSourceShipmentType of type SHIPMENT_TYPE_PALLET.
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEPALLET
)

var ErrInvalidListResponseItemSourceShipmentType = fmt.Errorf("not a valid ListResponseItemSourceShipmentType, try [%s]", strings.Join(_ListResponseItemSourceShipmentTypeNames, ", "))

const _ListResponseItemSourceShipmentTypeName = "SHIPMENT_TYPE_UNSPECIFIEDSHIPMENT_TYPE_GENERALSHIPMENT_TYPE_BOXSHIPMENT_TYPE_PALLET"

var _ListResponseItemSourceShipmentTypeNames = []string{
	_ListResponseItemSourceShipmentTypeName[0:25],
	_ListResponseItemSourceShipmentTypeName[25:46],
	_ListResponseItemSourceShipmentTypeName[46:63],
	_ListResponseItemSourceShipmentTypeName[63:83],
}

// ListResponseItemSourceShipmentTypeNames returns a list of possible string values of ListResponseItemSourceShipmentType.
func ListResponseItemSourceShipmentTypeNames() []string {
	tmp := make([]string, len(_ListResponseItemSourceShipmentTypeNames))
	copy(tmp, _ListResponseItemSourceShipmentTypeNames)
	return tmp
}

var _ListResponseItemSourceShipmentTypeMap = map[ListResponseItemSourceShipmentType]string{
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEUNSPECIFIED: _ListResponseItemSourceShipmentTypeName[0:25],
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEGENERAL:     _ListResponseItemSourceShipmentTypeName[25:46],
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEBOX:         _ListResponseItemSourceShipmentTypeName[46:63],
	ListResponseItemSourceShipmentTypeSHIPMENTTYPEPALLET:      _ListResponseItemSourceShipmentTypeName[63:83],
}

// String implements the Stringer interface.
func (x ListResponseItemSourceShipmentType) String() string {
	if str, ok := _ListResponseItemSourceShipmentTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("ListResponseItemSourceShipmentType(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x ListResponseItemSourceShipmentType) IsValid() bool {
	_, ok := _ListResponseItemSourceShipmentTypeMap[x]
	return ok
}

var _ListResponseItemSourceShipmentTypeValue = map[string]ListResponseItemSourceShipmentType{
	_ListResponseItemSourceShipmentTypeName[0:25]:  ListResponseItemSourceShipmentTypeSHIPMENTTYPEUNSPECIFIED,
	_ListResponseItemSourceShipmentTypeName[25:46]: ListResponseItemSourceShipmentTypeSHIPMENTTYPEGENERAL,
	_ListResponseItemSourceShipmentTypeName[46:63]: ListResponseItemSourceShipmentTypeSHIPMENTTYPEBOX,
	_ListResponseItemSourceShipmentTypeName[63:83]: ListResponseItemSourceShipmentTypeSHIPMENTTYPEPALLET,
}

// ParseListResponseItemSourceShipmentType attempts to convert a string to a ListResponseItemSourceShipmentType.
func ParseListResponseItemSourceShipmentType(name string) (ListResponseItemSourceShipmentType, error) {
	if x, ok := _ListResponseItemSourceShipmentTypeValue[name]; ok {
		return x, nil
	}
	return ListResponseItemSourceShipmentType(0), fmt.Errorf("%s is %w", name, ErrInvalidListResponseItemSourceShipmentType)
}

// MarshalText implements the text marshaller method.
func (x ListResponseItemSourceShipmentType) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *ListResponseItemSourceShipmentType) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseListResponseItemSourceShipmentType(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// StocksRequestFilterVisibilityALL is a StocksRequestFilterVisibility of type ALL.
	StocksRequestFilterVisibilityALL StocksRequestFilterVisibility = iota
	// StocksRequestFilterVisibilityVISIBLE is a StocksRequestFilterVisibility of type VISIBLE.
	StocksRequestFilterVisibilityVISIBLE
	// StocksRequestFilterVisibilityINVISIBLE is a StocksRequestFilterVisibility of type INVISIBLE.
	StocksRequestFilterVisibilityINVISIBLE
	// StocksRequestFilterVisibilityEMPTYSTOCK is a StocksRequestFilterVisibility of type EMPTY_STOCK.
	StocksRequestFilterVisibilityEMPTYSTOCK
	// StocksRequestFilterVisibilityNOTMODERATED is a StocksRequestFilterVisibility of type NOT_MODERATED.
	StocksRequestFilterVisibilityNOTMODERATED
	// StocksRequestFilterVisibilityMODERATED is a StocksRequestFilterVisibility of type MODERATED.
	StocksRequestFilterVisibilityMODERATED
	// StocksRequestFilterVisibilityDISABLED is a StocksRequestFilterVisibility of type DISABLED.
	StocksRequestFilterVisibilityDISABLED
	// StocksRequestFilterVisibilitySTATEFAILED is a StocksRequestFilterVisibility of type STATE_FAILED.
	StocksRequestFilterVisibilitySTATEFAILED
	// StocksRequestFilterVisibilityREADYTOSUPPLY is a StocksRequestFilterVisibility of type READY_TO_SUPPLY.
	StocksRequestFilterVisibilityREADYTOSUPPLY
	// StocksRequestFilterVisibilityVALIDATIONSTATEPENDING is a StocksRequestFilterVisibility of type VALIDATION_STATE_PENDING.
	StocksRequestFilterVisibilityVALIDATIONSTATEPENDING
	// StocksRequestFilterVisibilityVALIDATIONSTATEFAIL is a StocksRequestFilterVisibility of type VALIDATION_STATE_FAIL.
	StocksRequestFilterVisibilityVALIDATIONSTATEFAIL
	// StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS is a StocksRequestFilterVisibility of type VALIDATION_STATE_SUCCESS.
	StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS
	// StocksRequestFilterVisibilityTOSUPPLY is a StocksRequestFilterVisibility of type TO_SUPPLY.
	StocksRequestFilterVisibilityTOSUPPLY
	// StocksRequestFilterVisibilityINSALE is a StocksRequestFilterVisibility of type IN_SALE.
	StocksRequestFilterVisibilityINSALE
	// StocksRequestFilterVisibilityREMOVEDFROMSALE is a StocksRequestFilterVisibility of type REMOVED_FROM_SALE.
	StocksRequestFilterVisibilityREMOVEDFROMSALE
	// StocksRequestFilterVisibilityBANNED is a StocksRequestFilterVisibility of type BANNED.
	StocksRequestFilterVisibilityBANNED
	// StocksRequestFilterVisibilityOVERPRICED is a StocksRequestFilterVisibility of type OVERPRICED.
	StocksRequestFilterVisibilityOVERPRICED
	// StocksRequestFilterVisibilityCRITICALLYOVERPRICED is a StocksRequestFilterVisibility of type CRITICALLY_OVERPRICED.
	StocksRequestFilterVisibilityCRITICALLYOVERPRICED
	// StocksRequestFilterVisibilityEMPTYBARCODE is a StocksRequestFilterVisibility of type EMPTY_BARCODE.
	StocksRequestFilterVisibilityEMPTYBARCODE
	// StocksRequestFilterVisibilityBARCODEEXISTS is a StocksRequestFilterVisibility of type BARCODE_EXISTS.
	StocksRequestFilterVisibilityBARCODEEXISTS
	// StocksRequestFilterVisibilityQUARANTINE is a StocksRequestFilterVisibility of type QUARANTINE.
	StocksRequestFilterVisibilityQUARANTINE
	// StocksRequestFilterVisibilityARCHIVED is a StocksRequestFilterVisibility of type ARCHIVED.
	StocksRequestFilterVisibilityARCHIVED
	// StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK is a StocksRequestFilterVisibility of type OVERPRICED_WITH_STOCK.
	StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK
	// StocksRequestFilterVisibilityPARTIALAPPROVED is a StocksRequestFilterVisibility of type PARTIAL_APPROVED.
	StocksRequestFilterVisibilityPARTIALAPPROVED
	// StocksRequestFilterVisibilityIMAGEABSENT is a StocksRequestFilterVisibility of type IMAGE_ABSENT.
	StocksRequestFilterVisibilityIMAGEABSENT
	// StocksRequestFilterVisibilityMODERATIONBLOCK is a StocksRequestFilterVisibility of type MODERATION_BLOCK.
	StocksRequestFilterVisibilityMODERATIONBLOCK
)

var ErrInvalidStocksRequestFilterVisibility = fmt.Errorf("not a valid StocksRequestFilterVisibility, try [%s]", strings.Join(_StocksRequestFilterVisibilityNames, ", "))

const _StocksRequestFilterVisibilityName = "ALLVISIBLEINVISIBLEEMPTY_STOCKNOT_MODERATEDMODERATEDDISABLEDSTATE_FAILEDREADY_TO_SUPPLYVALIDATION_STATE_PENDINGVALIDATION_STATE_FAILVALIDATION_STATE_SUCCESSTO_SUPPLYIN_SALEREMOVED_FROM_SALEBANNEDOVERPRICEDCRITICALLY_OVERPRICEDEMPTY_BARCODEBARCODE_EXISTSQUARANTINEARCHIVEDOVERPRICED_WITH_STOCKPARTIAL_APPROVEDIMAGE_ABSENTMODERATION_BLOCK"

var _StocksRequestFilterVisibilityNames = []string{
	_StocksRequestFilterVisibilityName[0:3],
	_StocksRequestFilterVisibilityName[3:10],
	_StocksRequestFilterVisibilityName[10:19],
	_StocksRequestFilterVisibilityName[19:30],
	_StocksRequestFilterVisibilityName[30:43],
	_StocksRequestFilterVisibilityName[43:52],
	_StocksRequestFilterVisibilityName[52:60],
	_StocksRequestFilterVisibilityName[60:72],
	_StocksRequestFilterVisibilityName[72:87],
	_StocksRequestFilterVisibilityName[87:111],
	_StocksRequestFilterVisibilityName[111:132],
	_StocksRequestFilterVisibilityName[132:156],
	_StocksRequestFilterVisibilityName[156:165],
	_StocksRequestFilterVisibilityName[165:172],
	_StocksRequestFilterVisibilityName[172:189],
	_StocksRequestFilterVisibilityName[189:195],
	_StocksRequestFilterVisibilityName[195:205],
	_StocksRequestFilterVisibilityName[205:226],
	_StocksRequestFilterVisibilityName[226:239],
	_StocksRequestFilterVisibilityName[239:253],
	_StocksRequestFilterVisibilityName[253:263],
	_StocksRequestFilterVisibilityName[263:271],
	_StocksRequestFilterVisibilityName[271:292],
	_StocksRequestFilterVisibilityName[292:308],
	_StocksRequestFilterVisibilityName[308:320],
	_StocksRequestFilterVisibilityName[320:336],
}

// StocksRequestFilterVisibilityNames returns a list of possible string values of StocksRequestFilterVisibility.
func StocksRequestFilterVisibilityNames() []string {
	tmp := make([]string, len(_StocksRequestFilterVisibilityNames))
	copy(tmp, _StocksRequestFilterVisibilityNames)
	return tmp
}

var _StocksRequestFilterVisibilityMap = map[StocksRequestFilterVisibility]string{
	StocksRequestFilterVisibilityALL:                    _StocksRequestFilterVisibilityName[0:3],
	StocksRequestFilterVisibilityVISIBLE:                _StocksRequestFilterVisibilityName[3:10],
	StocksRequestFilterVisibilityINVISIBLE:              _StocksRequestFilterVisibilityName[10:19],
	StocksRequestFilterVisibilityEMPTYSTOCK:             _StocksRequestFilterVisibilityName[19:30],
	StocksRequestFilterVisibilityNOTMODERATED:           _StocksRequestFilterVisibilityName[30:43],
	StocksRequestFilterVisibilityMODERATED:              _StocksRequestFilterVisibilityName[43:52],
	StocksRequestFilterVisibilityDISABLED:               _StocksRequestFilterVisibilityName[52:60],
	StocksRequestFilterVisibilitySTATEFAILED:            _StocksRequestFilterVisibilityName[60:72],
	StocksRequestFilterVisibilityREADYTOSUPPLY:          _StocksRequestFilterVisibilityName[72:87],
	StocksRequestFilterVisibilityVALIDATIONSTATEPENDING: _StocksRequestFilterVisibilityName[87:111],
	StocksRequestFilterVisibilityVALIDATIONSTATEFAIL:    _StocksRequestFilterVisibilityName[111:132],
	StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS: _StocksRequestFilterVisibilityName[132:156],
	StocksRequestFilterVisibilityTOSUPPLY:               _StocksRequestFilterVisibilityName[156:165],
	StocksRequestFilterVisibilityINSALE:                 _StocksRequestFilterVisibilityName[165:172],
	StocksRequestFilterVisibilityREMOVEDFROMSALE:        _StocksRequestFilterVisibilityName[172:189],
	StocksRequestFilterVisibilityBANNED:                 _StocksRequestFilterVisibilityName[189:195],
	StocksRequestFilterVisibilityOVERPRICED:             _StocksRequestFilterVisibilityName[195:205],
	StocksRequestFilterVisibilityCRITICALLYOVERPRICED:   _StocksRequestFilterVisibilityName[205:226],
	StocksRequestFilterVisibilityEMPTYBARCODE:           _StocksRequestFilterVisibilityName[226:239],
	StocksRequestFilterVisibilityBARCODEEXISTS:          _StocksRequestFilterVisibilityName[239:253],
	StocksRequestFilterVisibilityQUARANTINE:             _StocksRequestFilterVisibilityName[253:263],
	StocksRequestFilterVisibilityARCHIVED:               _StocksRequestFilterVisibilityName[263:271],
	StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK:    _StocksRequestFilterVisibilityName[271:292],
	StocksRequestFilterVisibilityPARTIALAPPROVED:        _StocksRequestFilterVisibilityName[292:308],
	StocksRequestFilterVisibilityIMAGEABSENT:            _StocksRequestFilterVisibilityName[308:320],
	StocksRequestFilterVisibilityMODERATIONBLOCK:        _StocksRequestFilterVisibilityName[320:336],
}

// String implements the Stringer interface.
func (x StocksRequestFilterVisibility) String() string {
	if str, ok := _StocksRequestFilterVisibilityMap[x]; ok {
		return str
	}
	return fmt.Sprintf("StocksRequestFilterVisibility(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x StocksRequestFilterVisibility) IsValid() bool {
	_, ok := _StocksRequestFilterVisibilityMap[x]
	return ok
}

var _StocksRequestFilterVisibilityValue = map[string]StocksRequestFilterVisibility{
	_StocksRequestFilterVisibilityName[0:3]:     StocksRequestFilterVisibilityALL,
	_StocksRequestFilterVisibilityName[3:10]:    StocksRequestFilterVisibilityVISIBLE,
	_StocksRequestFilterVisibilityName[10:19]:   StocksRequestFilterVisibilityINVISIBLE,
	_StocksRequestFilterVisibilityName[19:30]:   StocksRequestFilterVisibilityEMPTYSTOCK,
	_StocksRequestFilterVisibilityName[30:43]:   StocksRequestFilterVisibilityNOTMODERATED,
	_StocksRequestFilterVisibilityName[43:52]:   StocksRequestFilterVisibilityMODERATED,
	_StocksRequestFilterVisibilityName[52:60]:   StocksRequestFilterVisibilityDISABLED,
	_StocksRequestFilterVisibilityName[60:72]:   StocksRequestFilterVisibilitySTATEFAILED,
	_StocksRequestFilterVisibilityName[72:87]:   StocksRequestFilterVisibilityREADYTOSUPPLY,
	_StocksRequestFilterVisibilityName[87:111]:  StocksRequestFilterVisibilityVALIDATIONSTATEPENDING,
	_StocksRequestFilterVisibilityName[111:132]: StocksRequestFilterVisibilityVALIDATIONSTATEFAIL,
	_StocksRequestFilterVisibilityName[132:156]: StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS,
	_StocksRequestFilterVisibilityName[156:165]: StocksRequestFilterVisibilityTOSUPPLY,
	_StocksRequestFilterVisibilityName[165:172]: StocksRequestFilterVisibilityINSALE,
	_StocksRequestFilterVisibilityName[172:189]: StocksRequestFilterVisibilityREMOVEDFROMSALE,
	_StocksRequestFilterVisibilityName[189:195]: StocksRequestFilterVisibilityBANNED,
	_StocksRequestFilterVisibilityName[195:205]: StocksRequestFilterVisibilityOVERPRICED,
	_StocksRequestFilterVisibilityName[205:226]: StocksRequestFilterVisibilityCRITICALLYOVERPRICED,
	_StocksRequestFilterVisibilityName[226:239]: StocksRequestFilterVisibilityEMPTYBARCODE,
	_StocksRequestFilterVisibilityName[239:253]: StocksRequestFilterVisibilityBARCODEEXISTS,
	_StocksRequestFilterVisibilityName[253:263]: StocksRequestFilterVisibilityQUARANTINE,
	_StocksRequestFilterVisibilityName[263:271]: StocksRequestFilterVisibilityARCHIVED,
	_StocksRequestFilterVisibilityName[271:292]: StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK,
	_StocksRequestFilterVisibilityName[292:308]: StocksRequestFilterVisibilityPARTIALAPPROVED,
	_StocksRequestFilterVisibilityName[308:320]: StocksRequestFilterVisibilityIMAGEABSENT,
	_StocksRequestFilterVisibilityName[320:336]: StocksRequestFilterVisibilityMODERATIONBLOCK,
}

// ParseStocksRequestFilterVisibility attempts to convert a string to a StocksRequestFilterVisibility.
func ParseStocksRequestFilterVisibility(name string) (StocksRequestFilterVisibility, error) {
	if x, ok := _StocksRequestFilterVisibilityValue[name]; ok {
		return x, nil
	}
	return StocksRequestFilterVisibility(0), fmt.Errorf("%s is %w", name, ErrInvalidStocksRequestFilterVisibility)
}

// MarshalText implements the text marshaller method.
func (x StocksRequestFilterVisibility) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *StocksRequestFilterVisibility) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseStocksRequestFilterVisibility(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

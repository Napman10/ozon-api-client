// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package info

import (
	"fmt"
	"strings"
)

const (
	// StocksRequestFilterVisibilityALL is a StocksRequestFilterVisibility of type ALL.
	StocksRequestFilterVisibilityALL StocksRequestFilterVisibility = iota
	// StocksRequestFilterVisibilityVISIBLE is a StocksRequestFilterVisibility of type VISIBLE.
	StocksRequestFilterVisibilityVISIBLE
	// StocksRequestFilterVisibilityINVISIBLE is a StocksRequestFilterVisibility of type INVISIBLE.
	StocksRequestFilterVisibilityINVISIBLE
	// StocksRequestFilterVisibilityEMPTYSTOCK is a StocksRequestFilterVisibility of type EMPTY_STOCK.
	StocksRequestFilterVisibilityEMPTYSTOCK
	// StocksRequestFilterVisibilityNOTMODERATED is a StocksRequestFilterVisibility of type NOT_MODERATED.
	StocksRequestFilterVisibilityNOTMODERATED
	// StocksRequestFilterVisibilityMODERATED is a StocksRequestFilterVisibility of type MODERATED.
	StocksRequestFilterVisibilityMODERATED
	// StocksRequestFilterVisibilityDISABLED is a StocksRequestFilterVisibility of type DISABLED.
	StocksRequestFilterVisibilityDISABLED
	// StocksRequestFilterVisibilitySTATEFAILED is a StocksRequestFilterVisibility of type STATE_FAILED.
	StocksRequestFilterVisibilitySTATEFAILED
	// StocksRequestFilterVisibilityREADYTOSUPPLY is a StocksRequestFilterVisibility of type READY_TO_SUPPLY.
	StocksRequestFilterVisibilityREADYTOSUPPLY
	// StocksRequestFilterVisibilityVALIDATIONSTATEPENDING is a StocksRequestFilterVisibility of type VALIDATION_STATE_PENDING.
	StocksRequestFilterVisibilityVALIDATIONSTATEPENDING
	// StocksRequestFilterVisibilityVALIDATIONSTATEFAIL is a StocksRequestFilterVisibility of type VALIDATION_STATE_FAIL.
	StocksRequestFilterVisibilityVALIDATIONSTATEFAIL
	// StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS is a StocksRequestFilterVisibility of type VALIDATION_STATE_SUCCESS.
	StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS
	// StocksRequestFilterVisibilityTOSUPPLY is a StocksRequestFilterVisibility of type TO_SUPPLY.
	StocksRequestFilterVisibilityTOSUPPLY
	// StocksRequestFilterVisibilityINSALE is a StocksRequestFilterVisibility of type IN_SALE.
	StocksRequestFilterVisibilityINSALE
	// StocksRequestFilterVisibilityREMOVEDFROMSALE is a StocksRequestFilterVisibility of type REMOVED_FROM_SALE.
	StocksRequestFilterVisibilityREMOVEDFROMSALE
	// StocksRequestFilterVisibilityBANNED is a StocksRequestFilterVisibility of type BANNED.
	StocksRequestFilterVisibilityBANNED
	// StocksRequestFilterVisibilityOVERPRICED is a StocksRequestFilterVisibility of type OVERPRICED.
	StocksRequestFilterVisibilityOVERPRICED
	// StocksRequestFilterVisibilityCRITICALLYOVERPRICED is a StocksRequestFilterVisibility of type CRITICALLY_OVERPRICED.
	StocksRequestFilterVisibilityCRITICALLYOVERPRICED
	// StocksRequestFilterVisibilityEMPTYBARCODE is a StocksRequestFilterVisibility of type EMPTY_BARCODE.
	StocksRequestFilterVisibilityEMPTYBARCODE
	// StocksRequestFilterVisibilityBARCODEEXISTS is a StocksRequestFilterVisibility of type BARCODE_EXISTS.
	StocksRequestFilterVisibilityBARCODEEXISTS
	// StocksRequestFilterVisibilityQUARANTINE is a StocksRequestFilterVisibility of type QUARANTINE.
	StocksRequestFilterVisibilityQUARANTINE
	// StocksRequestFilterVisibilityARCHIVED is a StocksRequestFilterVisibility of type ARCHIVED.
	StocksRequestFilterVisibilityARCHIVED
	// StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK is a StocksRequestFilterVisibility of type OVERPRICED_WITH_STOCK.
	StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK
	// StocksRequestFilterVisibilityPARTIALAPPROVED is a StocksRequestFilterVisibility of type PARTIAL_APPROVED.
	StocksRequestFilterVisibilityPARTIALAPPROVED
	// StocksRequestFilterVisibilityIMAGEABSENT is a StocksRequestFilterVisibility of type IMAGE_ABSENT.
	StocksRequestFilterVisibilityIMAGEABSENT
	// StocksRequestFilterVisibilityMODERATIONBLOCK is a StocksRequestFilterVisibility of type MODERATION_BLOCK.
	StocksRequestFilterVisibilityMODERATIONBLOCK
)

var ErrInvalidStocksRequestFilterVisibility = fmt.Errorf("not a valid StocksRequestFilterVisibility, try [%s]", strings.Join(_StocksRequestFilterVisibilityNames, ", "))

const _StocksRequestFilterVisibilityName = "ALLVISIBLEINVISIBLEEMPTY_STOCKNOT_MODERATEDMODERATEDDISABLEDSTATE_FAILEDREADY_TO_SUPPLYVALIDATION_STATE_PENDINGVALIDATION_STATE_FAILVALIDATION_STATE_SUCCESSTO_SUPPLYIN_SALEREMOVED_FROM_SALEBANNEDOVERPRICEDCRITICALLY_OVERPRICEDEMPTY_BARCODEBARCODE_EXISTSQUARANTINEARCHIVEDOVERPRICED_WITH_STOCKPARTIAL_APPROVEDIMAGE_ABSENTMODERATION_BLOCK"

var _StocksRequestFilterVisibilityNames = []string{
	_StocksRequestFilterVisibilityName[0:3],
	_StocksRequestFilterVisibilityName[3:10],
	_StocksRequestFilterVisibilityName[10:19],
	_StocksRequestFilterVisibilityName[19:30],
	_StocksRequestFilterVisibilityName[30:43],
	_StocksRequestFilterVisibilityName[43:52],
	_StocksRequestFilterVisibilityName[52:60],
	_StocksRequestFilterVisibilityName[60:72],
	_StocksRequestFilterVisibilityName[72:87],
	_StocksRequestFilterVisibilityName[87:111],
	_StocksRequestFilterVisibilityName[111:132],
	_StocksRequestFilterVisibilityName[132:156],
	_StocksRequestFilterVisibilityName[156:165],
	_StocksRequestFilterVisibilityName[165:172],
	_StocksRequestFilterVisibilityName[172:189],
	_StocksRequestFilterVisibilityName[189:195],
	_StocksRequestFilterVisibilityName[195:205],
	_StocksRequestFilterVisibilityName[205:226],
	_StocksRequestFilterVisibilityName[226:239],
	_StocksRequestFilterVisibilityName[239:253],
	_StocksRequestFilterVisibilityName[253:263],
	_StocksRequestFilterVisibilityName[263:271],
	_StocksRequestFilterVisibilityName[271:292],
	_StocksRequestFilterVisibilityName[292:308],
	_StocksRequestFilterVisibilityName[308:320],
	_StocksRequestFilterVisibilityName[320:336],
}

// StocksRequestFilterVisibilityNames returns a list of possible string values of StocksRequestFilterVisibility.
func StocksRequestFilterVisibilityNames() []string {
	tmp := make([]string, len(_StocksRequestFilterVisibilityNames))
	copy(tmp, _StocksRequestFilterVisibilityNames)
	return tmp
}

var _StocksRequestFilterVisibilityMap = map[StocksRequestFilterVisibility]string{
	StocksRequestFilterVisibilityALL:                    _StocksRequestFilterVisibilityName[0:3],
	StocksRequestFilterVisibilityVISIBLE:                _StocksRequestFilterVisibilityName[3:10],
	StocksRequestFilterVisibilityINVISIBLE:              _StocksRequestFilterVisibilityName[10:19],
	StocksRequestFilterVisibilityEMPTYSTOCK:             _StocksRequestFilterVisibilityName[19:30],
	StocksRequestFilterVisibilityNOTMODERATED:           _StocksRequestFilterVisibilityName[30:43],
	StocksRequestFilterVisibilityMODERATED:              _StocksRequestFilterVisibilityName[43:52],
	StocksRequestFilterVisibilityDISABLED:               _StocksRequestFilterVisibilityName[52:60],
	StocksRequestFilterVisibilitySTATEFAILED:            _StocksRequestFilterVisibilityName[60:72],
	StocksRequestFilterVisibilityREADYTOSUPPLY:          _StocksRequestFilterVisibilityName[72:87],
	StocksRequestFilterVisibilityVALIDATIONSTATEPENDING: _StocksRequestFilterVisibilityName[87:111],
	StocksRequestFilterVisibilityVALIDATIONSTATEFAIL:    _StocksRequestFilterVisibilityName[111:132],
	StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS: _StocksRequestFilterVisibilityName[132:156],
	StocksRequestFilterVisibilityTOSUPPLY:               _StocksRequestFilterVisibilityName[156:165],
	StocksRequestFilterVisibilityINSALE:                 _StocksRequestFilterVisibilityName[165:172],
	StocksRequestFilterVisibilityREMOVEDFROMSALE:        _StocksRequestFilterVisibilityName[172:189],
	StocksRequestFilterVisibilityBANNED:                 _StocksRequestFilterVisibilityName[189:195],
	StocksRequestFilterVisibilityOVERPRICED:             _StocksRequestFilterVisibilityName[195:205],
	StocksRequestFilterVisibilityCRITICALLYOVERPRICED:   _StocksRequestFilterVisibilityName[205:226],
	StocksRequestFilterVisibilityEMPTYBARCODE:           _StocksRequestFilterVisibilityName[226:239],
	StocksRequestFilterVisibilityBARCODEEXISTS:          _StocksRequestFilterVisibilityName[239:253],
	StocksRequestFilterVisibilityQUARANTINE:             _StocksRequestFilterVisibilityName[253:263],
	StocksRequestFilterVisibilityARCHIVED:               _StocksRequestFilterVisibilityName[263:271],
	StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK:    _StocksRequestFilterVisibilityName[271:292],
	StocksRequestFilterVisibilityPARTIALAPPROVED:        _StocksRequestFilterVisibilityName[292:308],
	StocksRequestFilterVisibilityIMAGEABSENT:            _StocksRequestFilterVisibilityName[308:320],
	StocksRequestFilterVisibilityMODERATIONBLOCK:        _StocksRequestFilterVisibilityName[320:336],
}

// String implements the Stringer interface.
func (x StocksRequestFilterVisibility) String() string {
	if str, ok := _StocksRequestFilterVisibilityMap[x]; ok {
		return str
	}
	return fmt.Sprintf("StocksRequestFilterVisibility(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x StocksRequestFilterVisibility) IsValid() bool {
	_, ok := _StocksRequestFilterVisibilityMap[x]
	return ok
}

var _StocksRequestFilterVisibilityValue = map[string]StocksRequestFilterVisibility{
	_StocksRequestFilterVisibilityName[0:3]:     StocksRequestFilterVisibilityALL,
	_StocksRequestFilterVisibilityName[3:10]:    StocksRequestFilterVisibilityVISIBLE,
	_StocksRequestFilterVisibilityName[10:19]:   StocksRequestFilterVisibilityINVISIBLE,
	_StocksRequestFilterVisibilityName[19:30]:   StocksRequestFilterVisibilityEMPTYSTOCK,
	_StocksRequestFilterVisibilityName[30:43]:   StocksRequestFilterVisibilityNOTMODERATED,
	_StocksRequestFilterVisibilityName[43:52]:   StocksRequestFilterVisibilityMODERATED,
	_StocksRequestFilterVisibilityName[52:60]:   StocksRequestFilterVisibilityDISABLED,
	_StocksRequestFilterVisibilityName[60:72]:   StocksRequestFilterVisibilitySTATEFAILED,
	_StocksRequestFilterVisibilityName[72:87]:   StocksRequestFilterVisibilityREADYTOSUPPLY,
	_StocksRequestFilterVisibilityName[87:111]:  StocksRequestFilterVisibilityVALIDATIONSTATEPENDING,
	_StocksRequestFilterVisibilityName[111:132]: StocksRequestFilterVisibilityVALIDATIONSTATEFAIL,
	_StocksRequestFilterVisibilityName[132:156]: StocksRequestFilterVisibilityVALIDATIONSTATESUCCESS,
	_StocksRequestFilterVisibilityName[156:165]: StocksRequestFilterVisibilityTOSUPPLY,
	_StocksRequestFilterVisibilityName[165:172]: StocksRequestFilterVisibilityINSALE,
	_StocksRequestFilterVisibilityName[172:189]: StocksRequestFilterVisibilityREMOVEDFROMSALE,
	_StocksRequestFilterVisibilityName[189:195]: StocksRequestFilterVisibilityBANNED,
	_StocksRequestFilterVisibilityName[195:205]: StocksRequestFilterVisibilityOVERPRICED,
	_StocksRequestFilterVisibilityName[205:226]: StocksRequestFilterVisibilityCRITICALLYOVERPRICED,
	_StocksRequestFilterVisibilityName[226:239]: StocksRequestFilterVisibilityEMPTYBARCODE,
	_StocksRequestFilterVisibilityName[239:253]: StocksRequestFilterVisibilityBARCODEEXISTS,
	_StocksRequestFilterVisibilityName[253:263]: StocksRequestFilterVisibilityQUARANTINE,
	_StocksRequestFilterVisibilityName[263:271]: StocksRequestFilterVisibilityARCHIVED,
	_StocksRequestFilterVisibilityName[271:292]: StocksRequestFilterVisibilityOVERPRICEDWITHSTOCK,
	_StocksRequestFilterVisibilityName[292:308]: StocksRequestFilterVisibilityPARTIALAPPROVED,
	_StocksRequestFilterVisibilityName[308:320]: StocksRequestFilterVisibilityIMAGEABSENT,
	_StocksRequestFilterVisibilityName[320:336]: StocksRequestFilterVisibilityMODERATIONBLOCK,
}

// ParseStocksRequestFilterVisibility attempts to convert a string to a StocksRequestFilterVisibility.
func ParseStocksRequestFilterVisibility(name string) (StocksRequestFilterVisibility, error) {
	if x, ok := _StocksRequestFilterVisibilityValue[name]; ok {
		return x, nil
	}
	return StocksRequestFilterVisibility(0), fmt.Errorf("%s is %w", name, ErrInvalidStocksRequestFilterVisibility)
}

// MarshalText implements the text marshaller method.
func (x StocksRequestFilterVisibility) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *StocksRequestFilterVisibility) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseStocksRequestFilterVisibility(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

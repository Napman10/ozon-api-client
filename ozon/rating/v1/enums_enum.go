// Code generated by go-enum DO NOT EDIT.
// Version:
// Revision:
// Build Date:
// Built By:

package v1

import (
	"fmt"
	"strings"
)

const (
	// SummaryResponseGroupItemChangeDirectionDIRECTIONUNKNOWN is a SummaryResponseGroupItemChangeDirection of type DIRECTION_UNKNOWN.
	SummaryResponseGroupItemChangeDirectionDIRECTIONUNKNOWN SummaryResponseGroupItemChangeDirection = iota + 1
	// SummaryResponseGroupItemChangeDirectionDIRECTIONNONE is a SummaryResponseGroupItemChangeDirection of type DIRECTION_NONE.
	SummaryResponseGroupItemChangeDirectionDIRECTIONNONE
	// SummaryResponseGroupItemChangeDirectionDIRECTIONRISE is a SummaryResponseGroupItemChangeDirection of type DIRECTION_RISE.
	SummaryResponseGroupItemChangeDirectionDIRECTIONRISE
	// SummaryResponseGroupItemChangeDirectionDIRECTIONFALL is a SummaryResponseGroupItemChangeDirection of type DIRECTION_FALL.
	SummaryResponseGroupItemChangeDirectionDIRECTIONFALL
)

var ErrInvalidSummaryResponseGroupItemChangeDirection = fmt.Errorf("not a valid SummaryResponseGroupItemChangeDirection, try [%s]", strings.Join(_SummaryResponseGroupItemChangeDirectionNames, ", "))

const _SummaryResponseGroupItemChangeDirectionName = "DIRECTION_UNKNOWNDIRECTION_NONEDIRECTION_RISEDIRECTION_FALL"

var _SummaryResponseGroupItemChangeDirectionNames = []string{
	_SummaryResponseGroupItemChangeDirectionName[0:17],
	_SummaryResponseGroupItemChangeDirectionName[17:31],
	_SummaryResponseGroupItemChangeDirectionName[31:45],
	_SummaryResponseGroupItemChangeDirectionName[45:59],
}

// SummaryResponseGroupItemChangeDirectionNames returns a list of possible string values of SummaryResponseGroupItemChangeDirection.
func SummaryResponseGroupItemChangeDirectionNames() []string {
	tmp := make([]string, len(_SummaryResponseGroupItemChangeDirectionNames))
	copy(tmp, _SummaryResponseGroupItemChangeDirectionNames)
	return tmp
}

var _SummaryResponseGroupItemChangeDirectionMap = map[SummaryResponseGroupItemChangeDirection]string{
	SummaryResponseGroupItemChangeDirectionDIRECTIONUNKNOWN: _SummaryResponseGroupItemChangeDirectionName[0:17],
	SummaryResponseGroupItemChangeDirectionDIRECTIONNONE:    _SummaryResponseGroupItemChangeDirectionName[17:31],
	SummaryResponseGroupItemChangeDirectionDIRECTIONRISE:    _SummaryResponseGroupItemChangeDirectionName[31:45],
	SummaryResponseGroupItemChangeDirectionDIRECTIONFALL:    _SummaryResponseGroupItemChangeDirectionName[45:59],
}

// String implements the Stringer interface.
func (x SummaryResponseGroupItemChangeDirection) String() string {
	if str, ok := _SummaryResponseGroupItemChangeDirectionMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SummaryResponseGroupItemChangeDirection(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x SummaryResponseGroupItemChangeDirection) IsValid() bool {
	_, ok := _SummaryResponseGroupItemChangeDirectionMap[x]
	return ok
}

var _SummaryResponseGroupItemChangeDirectionValue = map[string]SummaryResponseGroupItemChangeDirection{
	_SummaryResponseGroupItemChangeDirectionName[0:17]:  SummaryResponseGroupItemChangeDirectionDIRECTIONUNKNOWN,
	_SummaryResponseGroupItemChangeDirectionName[17:31]: SummaryResponseGroupItemChangeDirectionDIRECTIONNONE,
	_SummaryResponseGroupItemChangeDirectionName[31:45]: SummaryResponseGroupItemChangeDirectionDIRECTIONRISE,
	_SummaryResponseGroupItemChangeDirectionName[45:59]: SummaryResponseGroupItemChangeDirectionDIRECTIONFALL,
}

// ParseSummaryResponseGroupItemChangeDirection attempts to convert a string to a SummaryResponseGroupItemChangeDirection.
func ParseSummaryResponseGroupItemChangeDirection(name string) (SummaryResponseGroupItemChangeDirection, error) {
	if x, ok := _SummaryResponseGroupItemChangeDirectionValue[name]; ok {
		return x, nil
	}
	return SummaryResponseGroupItemChangeDirection(0), fmt.Errorf("%s is %w", name, ErrInvalidSummaryResponseGroupItemChangeDirection)
}

// MarshalText implements the text marshaller method.
func (x SummaryResponseGroupItemChangeDirection) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *SummaryResponseGroupItemChangeDirection) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSummaryResponseGroupItemChangeDirection(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// SummaryResponseGroupItemChangeMeaningMEANINGUNKNOWN is a SummaryResponseGroupItemChangeMeaning of type MEANING_UNKNOWN.
	SummaryResponseGroupItemChangeMeaningMEANINGUNKNOWN SummaryResponseGroupItemChangeMeaning = iota + 1
	// SummaryResponseGroupItemChangeMeaningMEANINGNONE is a SummaryResponseGroupItemChangeMeaning of type MEANING_NONE.
	SummaryResponseGroupItemChangeMeaningMEANINGNONE
	// SummaryResponseGroupItemChangeMeaningMEANINGGOOD is a SummaryResponseGroupItemChangeMeaning of type MEANING_GOOD.
	SummaryResponseGroupItemChangeMeaningMEANINGGOOD
	// SummaryResponseGroupItemChangeMeaningMEANINGBAD is a SummaryResponseGroupItemChangeMeaning of type MEANING_BAD.
	SummaryResponseGroupItemChangeMeaningMEANINGBAD
)

var ErrInvalidSummaryResponseGroupItemChangeMeaning = fmt.Errorf("not a valid SummaryResponseGroupItemChangeMeaning, try [%s]", strings.Join(_SummaryResponseGroupItemChangeMeaningNames, ", "))

const _SummaryResponseGroupItemChangeMeaningName = "MEANING_UNKNOWNMEANING_NONEMEANING_GOODMEANING_BAD"

var _SummaryResponseGroupItemChangeMeaningNames = []string{
	_SummaryResponseGroupItemChangeMeaningName[0:15],
	_SummaryResponseGroupItemChangeMeaningName[15:27],
	_SummaryResponseGroupItemChangeMeaningName[27:39],
	_SummaryResponseGroupItemChangeMeaningName[39:50],
}

// SummaryResponseGroupItemChangeMeaningNames returns a list of possible string values of SummaryResponseGroupItemChangeMeaning.
func SummaryResponseGroupItemChangeMeaningNames() []string {
	tmp := make([]string, len(_SummaryResponseGroupItemChangeMeaningNames))
	copy(tmp, _SummaryResponseGroupItemChangeMeaningNames)
	return tmp
}

var _SummaryResponseGroupItemChangeMeaningMap = map[SummaryResponseGroupItemChangeMeaning]string{
	SummaryResponseGroupItemChangeMeaningMEANINGUNKNOWN: _SummaryResponseGroupItemChangeMeaningName[0:15],
	SummaryResponseGroupItemChangeMeaningMEANINGNONE:    _SummaryResponseGroupItemChangeMeaningName[15:27],
	SummaryResponseGroupItemChangeMeaningMEANINGGOOD:    _SummaryResponseGroupItemChangeMeaningName[27:39],
	SummaryResponseGroupItemChangeMeaningMEANINGBAD:     _SummaryResponseGroupItemChangeMeaningName[39:50],
}

// String implements the Stringer interface.
func (x SummaryResponseGroupItemChangeMeaning) String() string {
	if str, ok := _SummaryResponseGroupItemChangeMeaningMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SummaryResponseGroupItemChangeMeaning(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x SummaryResponseGroupItemChangeMeaning) IsValid() bool {
	_, ok := _SummaryResponseGroupItemChangeMeaningMap[x]
	return ok
}

var _SummaryResponseGroupItemChangeMeaningValue = map[string]SummaryResponseGroupItemChangeMeaning{
	_SummaryResponseGroupItemChangeMeaningName[0:15]:  SummaryResponseGroupItemChangeMeaningMEANINGUNKNOWN,
	_SummaryResponseGroupItemChangeMeaningName[15:27]: SummaryResponseGroupItemChangeMeaningMEANINGNONE,
	_SummaryResponseGroupItemChangeMeaningName[27:39]: SummaryResponseGroupItemChangeMeaningMEANINGGOOD,
	_SummaryResponseGroupItemChangeMeaningName[39:50]: SummaryResponseGroupItemChangeMeaningMEANINGBAD,
}

// ParseSummaryResponseGroupItemChangeMeaning attempts to convert a string to a SummaryResponseGroupItemChangeMeaning.
func ParseSummaryResponseGroupItemChangeMeaning(name string) (SummaryResponseGroupItemChangeMeaning, error) {
	if x, ok := _SummaryResponseGroupItemChangeMeaningValue[name]; ok {
		return x, nil
	}
	return SummaryResponseGroupItemChangeMeaning(0), fmt.Errorf("%s is %w", name, ErrInvalidSummaryResponseGroupItemChangeMeaning)
}

// MarshalText implements the text marshaller method.
func (x SummaryResponseGroupItemChangeMeaning) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *SummaryResponseGroupItemChangeMeaning) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSummaryResponseGroupItemChangeMeaning(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// SummaryResponseGroupItemRatingDirectionUNKNOWNDIRECTION is a SummaryResponseGroupItemRatingDirection of type UNKNOWN_DIRECTION.
	SummaryResponseGroupItemRatingDirectionUNKNOWNDIRECTION SummaryResponseGroupItemRatingDirection = iota + 1
	// SummaryResponseGroupItemRatingDirectionNEUTRAL is a SummaryResponseGroupItemRatingDirection of type NEUTRAL.
	SummaryResponseGroupItemRatingDirectionNEUTRAL
	// SummaryResponseGroupItemRatingDirectionHIGHERISBETTER is a SummaryResponseGroupItemRatingDirection of type HIGHER_IS_BETTER.
	SummaryResponseGroupItemRatingDirectionHIGHERISBETTER
	// SummaryResponseGroupItemRatingDirectionLOWERISBETTER is a SummaryResponseGroupItemRatingDirection of type LOWER_IS_BETTER.
	SummaryResponseGroupItemRatingDirectionLOWERISBETTER
)

var ErrInvalidSummaryResponseGroupItemRatingDirection = fmt.Errorf("not a valid SummaryResponseGroupItemRatingDirection, try [%s]", strings.Join(_SummaryResponseGroupItemRatingDirectionNames, ", "))

const _SummaryResponseGroupItemRatingDirectionName = "UNKNOWN_DIRECTIONNEUTRALHIGHER_IS_BETTERLOWER_IS_BETTER"

var _SummaryResponseGroupItemRatingDirectionNames = []string{
	_SummaryResponseGroupItemRatingDirectionName[0:17],
	_SummaryResponseGroupItemRatingDirectionName[17:24],
	_SummaryResponseGroupItemRatingDirectionName[24:40],
	_SummaryResponseGroupItemRatingDirectionName[40:55],
}

// SummaryResponseGroupItemRatingDirectionNames returns a list of possible string values of SummaryResponseGroupItemRatingDirection.
func SummaryResponseGroupItemRatingDirectionNames() []string {
	tmp := make([]string, len(_SummaryResponseGroupItemRatingDirectionNames))
	copy(tmp, _SummaryResponseGroupItemRatingDirectionNames)
	return tmp
}

var _SummaryResponseGroupItemRatingDirectionMap = map[SummaryResponseGroupItemRatingDirection]string{
	SummaryResponseGroupItemRatingDirectionUNKNOWNDIRECTION: _SummaryResponseGroupItemRatingDirectionName[0:17],
	SummaryResponseGroupItemRatingDirectionNEUTRAL:          _SummaryResponseGroupItemRatingDirectionName[17:24],
	SummaryResponseGroupItemRatingDirectionHIGHERISBETTER:   _SummaryResponseGroupItemRatingDirectionName[24:40],
	SummaryResponseGroupItemRatingDirectionLOWERISBETTER:    _SummaryResponseGroupItemRatingDirectionName[40:55],
}

// String implements the Stringer interface.
func (x SummaryResponseGroupItemRatingDirection) String() string {
	if str, ok := _SummaryResponseGroupItemRatingDirectionMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SummaryResponseGroupItemRatingDirection(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x SummaryResponseGroupItemRatingDirection) IsValid() bool {
	_, ok := _SummaryResponseGroupItemRatingDirectionMap[x]
	return ok
}

var _SummaryResponseGroupItemRatingDirectionValue = map[string]SummaryResponseGroupItemRatingDirection{
	_SummaryResponseGroupItemRatingDirectionName[0:17]:  SummaryResponseGroupItemRatingDirectionUNKNOWNDIRECTION,
	_SummaryResponseGroupItemRatingDirectionName[17:24]: SummaryResponseGroupItemRatingDirectionNEUTRAL,
	_SummaryResponseGroupItemRatingDirectionName[24:40]: SummaryResponseGroupItemRatingDirectionHIGHERISBETTER,
	_SummaryResponseGroupItemRatingDirectionName[40:55]: SummaryResponseGroupItemRatingDirectionLOWERISBETTER,
}

// ParseSummaryResponseGroupItemRatingDirection attempts to convert a string to a SummaryResponseGroupItemRatingDirection.
func ParseSummaryResponseGroupItemRatingDirection(name string) (SummaryResponseGroupItemRatingDirection, error) {
	if x, ok := _SummaryResponseGroupItemRatingDirectionValue[name]; ok {
		return x, nil
	}
	return SummaryResponseGroupItemRatingDirection(0), fmt.Errorf("%s is %w", name, ErrInvalidSummaryResponseGroupItemRatingDirection)
}

// MarshalText implements the text marshaller method.
func (x SummaryResponseGroupItemRatingDirection) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *SummaryResponseGroupItemRatingDirection) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSummaryResponseGroupItemRatingDirection(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// SummaryResponseGroupItemStatusUNKNOWNSTATUS is a SummaryResponseGroupItemStatus of type UNKNOWN_STATUS.
	SummaryResponseGroupItemStatusUNKNOWNSTATUS SummaryResponseGroupItemStatus = iota + 1
	// SummaryResponseGroupItemStatusOK is a SummaryResponseGroupItemStatus of type OK.
	SummaryResponseGroupItemStatusOK
	// SummaryResponseGroupItemStatusWARNING is a SummaryResponseGroupItemStatus of type WARNING.
	SummaryResponseGroupItemStatusWARNING
	// SummaryResponseGroupItemStatusCRITICAL is a SummaryResponseGroupItemStatus of type CRITICAL.
	SummaryResponseGroupItemStatusCRITICAL
)

var ErrInvalidSummaryResponseGroupItemStatus = fmt.Errorf("not a valid SummaryResponseGroupItemStatus, try [%s]", strings.Join(_SummaryResponseGroupItemStatusNames, ", "))

const _SummaryResponseGroupItemStatusName = "UNKNOWN_STATUSOKWARNINGCRITICAL"

var _SummaryResponseGroupItemStatusNames = []string{
	_SummaryResponseGroupItemStatusName[0:14],
	_SummaryResponseGroupItemStatusName[14:16],
	_SummaryResponseGroupItemStatusName[16:23],
	_SummaryResponseGroupItemStatusName[23:31],
}

// SummaryResponseGroupItemStatusNames returns a list of possible string values of SummaryResponseGroupItemStatus.
func SummaryResponseGroupItemStatusNames() []string {
	tmp := make([]string, len(_SummaryResponseGroupItemStatusNames))
	copy(tmp, _SummaryResponseGroupItemStatusNames)
	return tmp
}

var _SummaryResponseGroupItemStatusMap = map[SummaryResponseGroupItemStatus]string{
	SummaryResponseGroupItemStatusUNKNOWNSTATUS: _SummaryResponseGroupItemStatusName[0:14],
	SummaryResponseGroupItemStatusOK:            _SummaryResponseGroupItemStatusName[14:16],
	SummaryResponseGroupItemStatusWARNING:       _SummaryResponseGroupItemStatusName[16:23],
	SummaryResponseGroupItemStatusCRITICAL:      _SummaryResponseGroupItemStatusName[23:31],
}

// String implements the Stringer interface.
func (x SummaryResponseGroupItemStatus) String() string {
	if str, ok := _SummaryResponseGroupItemStatusMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SummaryResponseGroupItemStatus(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x SummaryResponseGroupItemStatus) IsValid() bool {
	_, ok := _SummaryResponseGroupItemStatusMap[x]
	return ok
}

var _SummaryResponseGroupItemStatusValue = map[string]SummaryResponseGroupItemStatus{
	_SummaryResponseGroupItemStatusName[0:14]:  SummaryResponseGroupItemStatusUNKNOWNSTATUS,
	_SummaryResponseGroupItemStatusName[14:16]: SummaryResponseGroupItemStatusOK,
	_SummaryResponseGroupItemStatusName[16:23]: SummaryResponseGroupItemStatusWARNING,
	_SummaryResponseGroupItemStatusName[23:31]: SummaryResponseGroupItemStatusCRITICAL,
}

// ParseSummaryResponseGroupItemStatus attempts to convert a string to a SummaryResponseGroupItemStatus.
func ParseSummaryResponseGroupItemStatus(name string) (SummaryResponseGroupItemStatus, error) {
	if x, ok := _SummaryResponseGroupItemStatusValue[name]; ok {
		return x, nil
	}
	return SummaryResponseGroupItemStatus(0), fmt.Errorf("%s is %w", name, ErrInvalidSummaryResponseGroupItemStatus)
}

// MarshalText implements the text marshaller method.
func (x SummaryResponseGroupItemStatus) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *SummaryResponseGroupItemStatus) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSummaryResponseGroupItemStatus(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}

const (
	// SummaryResponseGroupItemValueTypeUNKNOWNVALUE is a SummaryResponseGroupItemValueType of type UNKNOWN_VALUE.
	SummaryResponseGroupItemValueTypeUNKNOWNVALUE SummaryResponseGroupItemValueType = iota + 1
	// SummaryResponseGroupItemValueTypeINDEX is a SummaryResponseGroupItemValueType of type INDEX.
	SummaryResponseGroupItemValueTypeINDEX
	// SummaryResponseGroupItemValueTypePERCENT is a SummaryResponseGroupItemValueType of type PERCENT.
	SummaryResponseGroupItemValueTypePERCENT
	// SummaryResponseGroupItemValueTypeTIME is a SummaryResponseGroupItemValueType of type TIME.
	SummaryResponseGroupItemValueTypeTIME
	// SummaryResponseGroupItemValueTypeRATIO is a SummaryResponseGroupItemValueType of type RATIO.
	SummaryResponseGroupItemValueTypeRATIO
	// SummaryResponseGroupItemValueTypeREVIEWSCORE is a SummaryResponseGroupItemValueType of type REVIEW_SCORE.
	SummaryResponseGroupItemValueTypeREVIEWSCORE
	// SummaryResponseGroupItemValueTypeCOUNT is a SummaryResponseGroupItemValueType of type COUNT.
	SummaryResponseGroupItemValueTypeCOUNT
)

var ErrInvalidSummaryResponseGroupItemValueType = fmt.Errorf("not a valid SummaryResponseGroupItemValueType, try [%s]", strings.Join(_SummaryResponseGroupItemValueTypeNames, ", "))

const _SummaryResponseGroupItemValueTypeName = "UNKNOWN_VALUEINDEXPERCENTTIMERATIOREVIEW_SCORECOUNT"

var _SummaryResponseGroupItemValueTypeNames = []string{
	_SummaryResponseGroupItemValueTypeName[0:13],
	_SummaryResponseGroupItemValueTypeName[13:18],
	_SummaryResponseGroupItemValueTypeName[18:25],
	_SummaryResponseGroupItemValueTypeName[25:29],
	_SummaryResponseGroupItemValueTypeName[29:34],
	_SummaryResponseGroupItemValueTypeName[34:46],
	_SummaryResponseGroupItemValueTypeName[46:51],
}

// SummaryResponseGroupItemValueTypeNames returns a list of possible string values of SummaryResponseGroupItemValueType.
func SummaryResponseGroupItemValueTypeNames() []string {
	tmp := make([]string, len(_SummaryResponseGroupItemValueTypeNames))
	copy(tmp, _SummaryResponseGroupItemValueTypeNames)
	return tmp
}

var _SummaryResponseGroupItemValueTypeMap = map[SummaryResponseGroupItemValueType]string{
	SummaryResponseGroupItemValueTypeUNKNOWNVALUE: _SummaryResponseGroupItemValueTypeName[0:13],
	SummaryResponseGroupItemValueTypeINDEX:        _SummaryResponseGroupItemValueTypeName[13:18],
	SummaryResponseGroupItemValueTypePERCENT:      _SummaryResponseGroupItemValueTypeName[18:25],
	SummaryResponseGroupItemValueTypeTIME:         _SummaryResponseGroupItemValueTypeName[25:29],
	SummaryResponseGroupItemValueTypeRATIO:        _SummaryResponseGroupItemValueTypeName[29:34],
	SummaryResponseGroupItemValueTypeREVIEWSCORE:  _SummaryResponseGroupItemValueTypeName[34:46],
	SummaryResponseGroupItemValueTypeCOUNT:        _SummaryResponseGroupItemValueTypeName[46:51],
}

// String implements the Stringer interface.
func (x SummaryResponseGroupItemValueType) String() string {
	if str, ok := _SummaryResponseGroupItemValueTypeMap[x]; ok {
		return str
	}
	return fmt.Sprintf("SummaryResponseGroupItemValueType(%d)", x)
}

// IsValid provides a quick way to determine if the typed value is
// part of the allowed enumerated values
func (x SummaryResponseGroupItemValueType) IsValid() bool {
	_, ok := _SummaryResponseGroupItemValueTypeMap[x]
	return ok
}

var _SummaryResponseGroupItemValueTypeValue = map[string]SummaryResponseGroupItemValueType{
	_SummaryResponseGroupItemValueTypeName[0:13]:  SummaryResponseGroupItemValueTypeUNKNOWNVALUE,
	_SummaryResponseGroupItemValueTypeName[13:18]: SummaryResponseGroupItemValueTypeINDEX,
	_SummaryResponseGroupItemValueTypeName[18:25]: SummaryResponseGroupItemValueTypePERCENT,
	_SummaryResponseGroupItemValueTypeName[25:29]: SummaryResponseGroupItemValueTypeTIME,
	_SummaryResponseGroupItemValueTypeName[29:34]: SummaryResponseGroupItemValueTypeRATIO,
	_SummaryResponseGroupItemValueTypeName[34:46]: SummaryResponseGroupItemValueTypeREVIEWSCORE,
	_SummaryResponseGroupItemValueTypeName[46:51]: SummaryResponseGroupItemValueTypeCOUNT,
}

// ParseSummaryResponseGroupItemValueType attempts to convert a string to a SummaryResponseGroupItemValueType.
func ParseSummaryResponseGroupItemValueType(name string) (SummaryResponseGroupItemValueType, error) {
	if x, ok := _SummaryResponseGroupItemValueTypeValue[name]; ok {
		return x, nil
	}
	return SummaryResponseGroupItemValueType(0), fmt.Errorf("%s is %w", name, ErrInvalidSummaryResponseGroupItemValueType)
}

// MarshalText implements the text marshaller method.
func (x SummaryResponseGroupItemValueType) MarshalText() ([]byte, error) {
	return []byte(x.String()), nil
}

// UnmarshalText implements the text unmarshaller method.
func (x *SummaryResponseGroupItemValueType) UnmarshalText(text []byte) error {
	name := string(text)
	tmp, err := ParseSummaryResponseGroupItemValueType(name)
	if err != nil {
		return err
	}
	*x = tmp
	return nil
}
